# Generated by Django 5.0.4 on 2024-06-07 11:29

import django.db.models.deletion
import django.utils.timezone
import gestion_utilisateur.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('gestion_notes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Annee_scolaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('anneescolaire', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=25)),
                ('libelle', models.CharField(max_length=50)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(default='', editable=False, max_length=6)),
                ('nom', models.CharField(max_length=25)),
                ('prenom', models.CharField(max_length=25)),
                ('email', models.EmailField(max_length=254)),
                ('telephone', models.CharField(max_length=15)),
                ('adresse', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Parent_eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_pere', models.CharField(max_length=256)),
                ('telephone_pere', models.CharField(blank=True, max_length=256, null=True)),
                ('email_pere', models.EmailField(blank=True, max_length=254, null=True)),
                ('nom_mere', models.CharField(max_length=256)),
                ('telephone_mere', models.CharField(blank=True, max_length=256, null=True)),
                ('email_mere', models.EmailField(blank=True, max_length=254, null=True)),
                ('adresse', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10)),
                ('libelle', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'Personnel'), (2, 'Proffeseur'), (3, 'Parent_eleve')])),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Feminin')], max_length=1)),
                ('nom', models.CharField(max_length=256)),
                ('prenom', models.CharField(max_length=256)),
                ('telephone', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('matricule', models.TextField(max_length=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', gestion_utilisateur.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=10)),
                ('nom', models.CharField(max_length=25)),
                ('prenom', models.CharField(max_length=25)),
                ('date_naiss', models.DateField()),
                ('adresse', models.CharField(max_length=25)),
                ('annee_scolaire', models.ManyToManyField(to='gestion_utilisateur.annee_scolaire')),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_utilisateur.classe')),
            ],
        ),
        migrations.CreateModel(
            name='Enseignement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coeficient', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)])),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_utilisateur.classe')),
                ('enseignant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_utilisateur.enseignant')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_notes.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_pere', models.CharField(max_length=25)),
                ('prenom_pere', models.CharField(max_length=25)),
                ('nom_mere', models.CharField(max_length=25)),
                ('prenom_mere', models.CharField(max_length=25)),
                ('email_pere', models.EmailField(max_length=254)),
                ('email_mere', models.EmailField(max_length=254)),
                ('telephone_pere', models.CharField(max_length=15)),
                ('telephone_mere', models.CharField(max_length=15)),
                ('adresse', models.CharField(max_length=25)),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gestion_utilisateur.eleve')),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('poste', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='gestion_utilisateur.poste')),
            ],
        ),
        migrations.CreateModel(
            name='Proffeseur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='enseignant', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
